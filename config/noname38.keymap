/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3
#define GME 4

&lt { quick-tap-ms = <200>; };

&mt { quick-tap-ms = <200>; };

/ {
    combos {
        compatible = "zmk,combos";

        to_game_layer {
            bindings = <&to 4>;
            key-positions = <27 14>;
            layers = <0>;
        };

        to_default_layer {
            bindings = <&to 0>;
            key-positions = <15 3>;
            layers = <4>;
        };

        combo_delete {
            bindings = <&kp DEL>;
            key-positions = <37 38>;
            layers = <0>;
        };

        combo_backspace {
            bindings = <&kp BACKSPACE>;
            key-positions = <36 37>;
            layers = <0>;
        };

        combo_cs_mic {
            bindings = <&kp K>;
            key-positions = <37 38>;
            layers = <4>;
        };

        combo_copy {
            bindings = <&kp LC(C)>;
            key-positions = <2 3 4>;
            layers = <0>;
        };

        combo_paste {
            bindings = <&kp LC(V)>;
            key-positions = <2 4>;
            layers = <0>;
        };

        combo_cut {
            bindings = <&kp LC(X)>;
            key-positions = <2 3>;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            //        |   ~  |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |  F11   | 
            //        | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |CTRL/'|
            //        | LALT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | RALT |
            //                           | RSE | SPC | LWR |   | LWR | BKSP | RSE |
                        bindings = <
            &kp Q &kp W &kp E &kp R &kp T &kp Y  &kp U  &kp I     &kp O   &kp P    
            &kp A &kp S &kp D &kp F &kp G &kp H &kp J  &kp K     &kp L   &kp SEMI &kp RET 
            &kp Z &kp X &kp C &kp V &kp B &kp N   &kp M  &kp COMMA &kp DOT &kp FSLH
            &kp TAB &kp SPACE &kp RET &kp ESC &kp BSPC &kp DEL &kp DEL
                        >;
        };

    };
};
